{"version":3,"sources":["assets/nooutlinegreen.png","components/navbar/Brand.js","components/navbar/BurgerMenu.js","components/navbar/CollapseMenu.js","components/navbar/Navbar.js","components/ConvoForm.js","components/ResultsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Brand","href","Image","src","logo","alt","styled","img","Burgermenu","props","Wrapper","onClick","handleNavbar","className","navbarState","div","CollapseMenu","open","useSpring","CollapseWrapper","style","transform","interpolate","range","output","openValue","NavLinks","animated","ul","Navbar","barAnimation","from","linkAnimation","opacity","to","delay","config","wobbly","NavBar","FlexContainer","BurgerWrapper","BurgerMenu","nav","ConvoForm","formFields","submitCallback","bind","this","cf","ConversationalForm","startTheConversation","options","preventAutoFocus","tags","elem","appendChild","el","formDataSerialized","getFormData","console","log","addRobotChatResponse","q","colorInput","dev","hardData","appCallback","axios","method","url","header","data","imageUrl","then","response","catch","error","id","greenlogo","ref","React","Component","dict","Result","target","ResultsList","results","searchImg","map","result","key","site","products","product","App","state","finishedSurvey","navbarOpen","imgSrc","handleFinishedSurvey","formSubmitCallback","setState","ogURL","current","home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d866dd38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nooutlinegreen.d647e1b2.png\";","import React from 'react'\nimport styled from \"styled-components\";\n\nimport logo from \"../../assets/nooutlinegreen.png\";\n\nconst Brand = () => {\n  return (\n    <a href=''>\n    <Image src={logo} alt=\"Company Logo\" />\n    </a>\n  )\n}\n\nexport default Brand\n\nconst Image = styled.img`\n  height: 85%;\n  margin: auto 0;\n`;\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Burgermenu = (props) => {\n  return (\n    <Wrapper onClick={props.handleNavbar}>\n      <div className={ props.navbarState ? \"open\" : \"\" }>\n        <span>&nbsp;</span>\n        <span>&nbsp;</span>\n        <span>&nbsp;</span>\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default Burgermenu;\n\nconst Wrapper = styled.div`\n  position: relative;\n  padding-top: .7rem;\n  cursor: pointer;\n  display: block;\n\n  & span {\n    background: #fdcb6e;\n    display: block;\n    position: relative;\n    width: 3.5rem;\n    height: .4rem;\n    margin-bottom: .7rem;\n    transition: all ease-in-out 0.2s;\n  }\n\n  .open span:nth-child(2) {\n      opacity: 0;\n    }\n\n  .open span:nth-child(3) {\n    transform: rotate(45deg);\n    top: -11px;\n  }\n\n  .open span:nth-child(1) {\n    transform: rotate(-45deg);\n    top: 11px;\n  }\n\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useSpring, animated } from 'react-spring';\n\nconst CollapseMenu = (props) => {\n  const { open } = useSpring({ open: props.navbarState ? 0 : 1 });\n\n  if (props.navbarState === true) {\n    return (\n      <CollapseWrapper style={{\n        transform: open.interpolate({\n          range: [0, 0.2, 0.3, 1],\n          output: [0, -20, 0, -200],\n        }).interpolate(openValue => `translate3d(0, ${openValue}px, 0`),\n      }}\n      >\n        <NavLinks>\n          <li><a href=\"/\" onClick={props.handleNavbar}>link n1</a></li>\n          <li><a href=\"/\" onClick={props.handleNavbar}>link n2</a></li>\n          <li><a href=\"/\" onClick={props.handleNavbar}>link n3</a></li>\n          <li><a href=\"/\" onClick={props.handleNavbar}>link n4</a></li>\n        </NavLinks>\n      </CollapseWrapper>\n    );\n  }\n  return null;\n};\n\nexport default CollapseMenu;\n\nconst CollapseWrapper = styled(animated.div)`\n  background: #2d3436;\n  position: fixed;\n  top: 4.5rem;\n  left: 0;\n  right: 0;\n`;\n\nconst NavLinks = styled.ul`\n  list-style-type: none;\n  padding: 2rem 1rem 2rem 2rem;\n\n  & li {\n    transition: all 300ms linear 0s;\n  }\n\n  & a {\n    font-size: 1.4rem;\n    line-height: 2;\n    color: #161211;\n    text-transform: uppercase;\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover {\n      color: #fdcb6e;\n      border-bottom: 1px solid #fdcb6e;\n    }\n  }\n`;\n","import React from 'react'\nimport styled from \"styled-components\";\nimport { useSpring, animated, config } from \"react-spring\";\n\nimport Brand from \"./Brand\";\nimport BurgerMenu from \"./BurgerMenu\";\nimport CollapseMenu from \"./CollapseMenu\";\nimport Suggestions from './Suggestions';\n\nconst Navbar = (props) => {\n  const barAnimation = useSpring({\n    from: { transform: 'translate3d(0, -10rem, 0)' },\n    transform: 'translate3d(0, 0, 0)',\n  });\n\n  const linkAnimation = useSpring({\n    from: { transform: 'translate3d(0, 30px, 0)', opacity: 0 },\n    to: { transform: 'translate3d(0, 0, 0)', opacity: 1 },\n    delay: 800,\n    config: config.wobbly,\n  });\n\n  return (\n    <>\n      <NavBar style={barAnimation}>\n        <FlexContainer>\n          <Brand />\n          <NavLinks style={linkAnimation}>\n            <a href=\"\">RESTART</a>\n            {/* <a href=\"\">SUGGESTIONS</a> */}\n          </NavLinks>\n          <BurgerWrapper>\n            <BurgerMenu\n              navbarState={props.navbarState}\n              handleNavbar={props.handleNavbar}\n            />\n          </BurgerWrapper>\n        </FlexContainer>\n      </NavBar>\n      <CollapseMenu\n        navbarState={props.navbarState}\n        handleNavbar={props.handleNavbar}\n      />\n   </>\n  )\n}\n\nexport default Navbar\n\nconst NavBar = styled(animated.nav)`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  background: #D6E1DD;\n  z-index: 1;\n  font-size: 1.4rem;\n`;\n\nconst FlexContainer = styled.div`\n  max-width: 120rem;\n  display: flex;\n  margin: auto;\n  padding: 0 2rem;;\n  justify-content: space-between;\n  height: 5rem;\n`;\n\nconst NavLinks = styled(animated.ul)`\n  justify-self: end;\n  list-style-type: none;\n  margin: auto 0;\n\n  & a {\n    color: #161211;\n    text-transform: uppercase;\n    font-weight: 600;\n    border-bottom: 1px solid transparent;\n    margin: 0 1.5rem;\n    transition: all 300ms linear 0s;\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover {\n      color: #6E974F;\n      border-bottom: 1px solid #6E974F;\n    }\n\n    @media (max-width: 768px) {\n      display: none;\n    }\n  }\n`;\n\nconst BurgerWrapper = styled.div`\n  margin: auto 0;\n\n  @media (min-width: 769px) {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport axios from 'axios';\n//import { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\nimport { ConversationalForm } from 'conversational-form';\nimport './ConvoForm.css';\nimport hardData from '../data.json';\nimport greenlogo from '../assets/nooutlinegreen.png';\n\nconst cloudURL = 'https://us-central1-uofthacksvii-265521.cloudfunctions.net/search';\n\nexport default class ConvoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'imageUrl',\n        'cf-questions': 'Welcome! Paste the image URL of your clothing item you want'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'color-choice',\n        'cf-questions': 'Thank you! Did you want it in the original color or a different one?',\n        'cf-label': 'original',\n        'value': 'original'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'color-choice',\n        'cf-label': 'different',\n        'value': 'diff'\n      },\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'colorInput',\n        'cf-questions': 'Nice, what color would you like to look for?',\n        'cf-conditional-color-choice': 'diff',\n      },\n    ];\n\n    this.submitCallback = this.submitCallback.bind(this);\n  }\n\n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true,\n        // loadExternalStyleSheet: false\n      },\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n\n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    console.log(\"Formdata, obj:\", formDataSerialized);\n    this.cf.addRobotChatResponse(\"Processing your search... <span id='spin'>😎</span>\")\n    const q = formDataSerialized.colorInput ? formDataSerialized.colorInput : ''\n\n    if (this.props.dev){\n      console.log('dev');\n      console.log(q)\n      console.log(hardData);\n      // this.cf.addRobotChatResponse(\"Done! 🥳\");\n      this.props.appCallback(hardData, 'https://underarmour.scene7.com/is/image/Underarmour/V5-1216010-001_FC_Main?scl=1&fmt=jpg', q);\n    } else {\n      console.log(formDataSerialized.colorInput)\n      axios({\n        method: 'post',\n        url: cloudURL,\n        header: { 'content-type': 'application/json'},\n        data: {\n          imageUrl: formDataSerialized.imageUrl,\n          q: q\n        }\n      })\n      .then((response) => {\n        console.log(response);\n        this.cf.addRobotChatResponse(\"Done! 🥳\")\n        // TODO: connect to App.js\n        this.props.appCallback(response, formDataSerialized.imageUrl, q)\n      })\n      .catch((error) => {\n        // handle error\n        console.log(error);\n        this.cf.addRobotChatResponse(\"Oops! Something went wrong 😭\")\n      })\n\n    }\n\n  }\n\n  render() {\n    return (\n      <>\n        <div id='title-text'>\n          <img id='everwear-logo' src={greenlogo}/>\n          <p id=\"welcome-message\">We'll help you find the clothes you already want, but from <strong>ethical</strong>, <strong>sustainable</strong> sources.</p>\n        </div>\n        <div id = \"chat\" ref={ref => this.elem = ref}>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './ResultsList.css';\n\nconst dict = {\n  'alternativeapparel.com': 'Alternative Apparel',\n  'bodenusa.com': 'Boden',\n  'everlane.com': 'Everlane',\n  'fordays.com': 'For Days',\n  'kotn.com': 'Kotn',\n  'livefashionable.com': 'ABLE',\n  'peopletree.co.uk': 'People Tree',\n  'tentree.ca': 'tentree',\n  'wearpact.com': 'Pact'\n}\n\nconst Result = ({ href, src }) => (\n  <li className=\"results-list__item\">\n    <a href={href} target='_blank'>\n      <div className=\"results-list__item__image\">\n        <img src={src} />\n      </div>\n    </a>\n  </li>\n);\n\nconst ResultsList = ({ results, searchImg, q }) => {\n  console.log(results);\n  const qspan = q ? <span className='results-list__q'> in {q}</span> : null\n  return (\n    <div className=\"results-list\">\n      <h2 className=\"results-list__title\">You searched for <img className='results-list__og' src={searchImg}/> {q && `in ${q}`}</h2>\n      <div className=\"results-list__list\">\n        { results.map(result => (\n            <li key={result.site}>\n              <h3><a className='result-list__siteLink'  target='_blank' href={'https://www.' + result.site}>{dict[result.site]}</a></h3>\n              <ul className=\"results-list__row\">\n                { result.products.map(product => <Result key={product.src} {...product} />) }\n              </ul>\n            </li>\n          )) }\n      </div>\n    </div>\n)};\n\nexport default ResultsList;\n","import React, { Component } from 'react'\nimport Navbar from \"./components/navbar/Navbar\";\nimport './App.css';\nimport ConvoForm from './components/ConvoForm.js';\nimport ResultsList from './components/ResultsList.js';\n\nconst dev = false;\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      finishedSurvey: false,\n      results: null,\n      navbarOpen: false,\n      imgSrc: '',\n      q: ''\n    };\n\n    this.handleFinishedSurvey = this.handleFinishedSurvey.bind(this);\n    this.handleNavbar = this.handleNavbar.bind(this);\n    this.formSubmitCallback = this.formSubmitCallback.bind(this);\n  }\n\n  handleNavbar() {\n    this.setState({\n      navbarOpen: !this.state.navbarOpen\n    });\n  }\n\n  handleFinishedSurvey () {\n    this.setState ({\n      finishedSurvey : true\n    });\n  }\n\n  formSubmitCallback(response, ogURL, q){\n    // Uncomment line below to change thing:\n    this.handleFinishedSurvey();\n\n    console.log('SUBMITTED');\n    this.setState({\n      results: response.data,\n      imgSrc: ogURL,\n      q: q\n    });\n  }\n\n  render() {\n    let current;\n    let home;\n\n    if (!this.state.finishedSurvey) {\n      current = <ConvoForm appCallback={this.formSubmitCallback} dev={dev}/>\n      home= 'home'\n    } else {\n      current = <Navbar\n      navbarState={this.state.navbarOpen}\n      handleNavbar={this.handleNavbar} />;\n      home = ''\n    }\n    console.log(this.state.results);\n    return (\n      <div className={'app-container ' + home} >\n        {current}\n        {this.state.results && <ResultsList results={this.state.results} searchImg={this.state.imgSrc} q={this.state.q}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}