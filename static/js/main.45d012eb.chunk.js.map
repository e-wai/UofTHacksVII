{"version":3,"sources":["assets/nooutlinegreen.png","components/navbar/Brand.js","components/navbar/BurgerMenu.js","components/navbar/CollapseMenu.js","components/navbar/Navbar.js","components/ConvoForm.js","components/ResultsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Brand","href","Image","src","logo","alt","styled","img","Burgermenu","props","Wrapper","onClick","handleNavbar","className","navbarState","div","CollapseMenu","open","useSpring","CollapseWrapper","style","transform","interpolate","range","output","openValue","NavLinks","animated","ul","Navbar","barAnimation","from","linkAnimation","opacity","to","delay","config","wobbly","NavBar","FlexContainer","BurgerWrapper","BurgerMenu","nav","ConvoForm","formFields","submitCallback","bind","this","cf","ConversationalForm","startTheConversation","options","preventAutoFocus","tags","elem","appendChild","el","formDataSerialized","getFormData","console","log","addRobotChatResponse","q","colorInput","dev","hardData","appCallback","axios","method","url","header","data","imageUrl","then","response","catch","error","id","greenlogo","ref","React","Component","dict","Result","ResultsList","results","searchImg","map","result","key","site","products","product","App","state","finishedSurvey","navbarOpen","imgSrc","handleFinishedSurvey","formSubmitCallback","setState","ogURL","current","home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45d012eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nooutlinegreen.d647e1b2.png\";","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nimport logo from \"../../assets/nooutlinegreen.png\";\r\n\r\nconst Brand = () => {\r\n  return (\r\n    <a href=''>\r\n    <Image src={logo} alt=\"Company Logo\" />\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default Brand\r\n\r\nconst Image = styled.img`\r\n  height: 85%;\r\n  margin: auto 0;\r\n`;\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Burgermenu = (props) => {\r\n  return (\r\n    <Wrapper onClick={props.handleNavbar}>\r\n      <div className={ props.navbarState ? \"open\" : \"\" }>\r\n        <span>&nbsp;</span>\r\n        <span>&nbsp;</span>\r\n        <span>&nbsp;</span>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Burgermenu;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  padding-top: .7rem;\r\n  cursor: pointer;\r\n  display: block;\r\n\r\n  & span {\r\n    background: #fdcb6e;\r\n    display: block;\r\n    position: relative;\r\n    width: 3.5rem;\r\n    height: .4rem;\r\n    margin-bottom: .7rem;\r\n    transition: all ease-in-out 0.2s;\r\n  }\r\n\r\n  .open span:nth-child(2) {\r\n      opacity: 0;\r\n    }\r\n\r\n  .open span:nth-child(3) {\r\n    transform: rotate(45deg);\r\n    top: -11px;\r\n  }\r\n\r\n  .open span:nth-child(1) {\r\n    transform: rotate(-45deg);\r\n    top: 11px;\r\n  }\r\n\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nconst CollapseMenu = (props) => {\r\n  const { open } = useSpring({ open: props.navbarState ? 0 : 1 });\r\n\r\n  if (props.navbarState === true) {\r\n    return (\r\n      <CollapseWrapper style={{\r\n        transform: open.interpolate({\r\n          range: [0, 0.2, 0.3, 1],\r\n          output: [0, -20, 0, -200],\r\n        }).interpolate(openValue => `translate3d(0, ${openValue}px, 0`),\r\n      }}\r\n      >\r\n        <NavLinks>\r\n          <li><a href=\"/\" onClick={props.handleNavbar}>link n1</a></li>\r\n          <li><a href=\"/\" onClick={props.handleNavbar}>link n2</a></li>\r\n          <li><a href=\"/\" onClick={props.handleNavbar}>link n3</a></li>\r\n          <li><a href=\"/\" onClick={props.handleNavbar}>link n4</a></li>\r\n        </NavLinks>\r\n      </CollapseWrapper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default CollapseMenu;\r\n\r\nconst CollapseWrapper = styled(animated.div)`\r\n  background: #2d3436;\r\n  position: fixed;\r\n  top: 4.5rem;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\n\r\nconst NavLinks = styled.ul`\r\n  list-style-type: none;\r\n  padding: 2rem 1rem 2rem 2rem;\r\n\r\n  & li {\r\n    transition: all 300ms linear 0s;\r\n  }\r\n\r\n  & a {\r\n    font-size: 1.4rem;\r\n    line-height: 2;\r\n    color: #161211;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: #fdcb6e;\r\n      border-bottom: 1px solid #fdcb6e;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nimport Brand from \"./Brand\";\r\nimport BurgerMenu from \"./BurgerMenu\";\r\nimport CollapseMenu from \"./CollapseMenu\";\r\nimport Suggestions from './Suggestions';\r\n\r\nconst Navbar = (props) => {\r\n  const barAnimation = useSpring({\r\n    from: { transform: 'translate3d(0, -10rem, 0)' },\r\n    transform: 'translate3d(0, 0, 0)',\r\n  });\r\n\r\n  const linkAnimation = useSpring({\r\n    from: { transform: 'translate3d(0, 30px, 0)', opacity: 0 },\r\n    to: { transform: 'translate3d(0, 0, 0)', opacity: 1 },\r\n    delay: 800,\r\n    config: config.wobbly,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <NavBar style={barAnimation}>\r\n        <FlexContainer>\r\n          <Brand />\r\n          <NavLinks style={linkAnimation}>\r\n            <a href=\"\">RESTART</a>\r\n            {/* <a href=\"\">SUGGESTIONS</a> */}\r\n          </NavLinks>\r\n          <BurgerWrapper>\r\n            <BurgerMenu\r\n              navbarState={props.navbarState}\r\n              handleNavbar={props.handleNavbar}\r\n            />\r\n          </BurgerWrapper>\r\n        </FlexContainer>\r\n      </NavBar>\r\n      <CollapseMenu\r\n        navbarState={props.navbarState}\r\n        handleNavbar={props.handleNavbar}\r\n      />\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\nconst NavBar = styled(animated.nav)`\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background: #D6E1DD;\r\n  z-index: 1;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n  max-width: 120rem;\r\n  display: flex;\r\n  margin: auto;\r\n  padding: 0 2rem;;\r\n  justify-content: space-between;\r\n  height: 5rem;\r\n`;\r\n\r\nconst NavLinks = styled(animated.ul)`\r\n  justify-self: end;\r\n  list-style-type: none;\r\n  margin: auto 0;\r\n\r\n  & a {\r\n    color: #161211;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid transparent;\r\n    margin: 0 1.5rem;\r\n    transition: all 300ms linear 0s;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: #6E974F;\r\n      border-bottom: 1px solid #6E974F;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BurgerWrapper = styled.div`\r\n  margin: auto 0;\r\n\r\n  @media (min-width: 769px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n//import { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\r\nimport { ConversationalForm } from 'conversational-form';\r\nimport './ConvoForm.css';\r\nimport hardData from '../data.json';\r\nimport greenlogo from '../assets/nooutlinegreen.png';\r\n\r\nconst cloudURL = 'https://us-central1-uofthacksvii-265521.cloudfunctions.net/search';\r\n\r\nexport default class ConvoForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formFields = [\r\n      {\r\n        'tag': 'input',\r\n        'type': 'text',\r\n        'name': 'imageUrl',\r\n        'cf-questions': 'Welcome! Paste the image URL of your clothing item you want'\r\n      },\r\n      {\r\n        'tag': 'input',\r\n        'type': 'radio',\r\n        'name': 'color-choice',\r\n        'cf-questions': 'Thank you! Did you want it in the original color or a different one?',\r\n        'cf-label': 'original',\r\n        'value': 'original'\r\n      },\r\n      {\r\n        'tag': 'input',\r\n        'type': 'radio',\r\n        'name': 'color-choice',\r\n        'cf-label': 'different',\r\n        'value': 'diff'\r\n      },\r\n      {\r\n        'tag': 'input',\r\n        'type': 'text',\r\n        'name': 'colorInput',\r\n        'cf-questions': 'Nice, what color would you like to look for?',\r\n        'cf-conditional-color-choice': 'diff',\r\n      },\r\n    ];\r\n\r\n    this.submitCallback = this.submitCallback.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.cf = ConversationalForm.startTheConversation({\r\n      options: {\r\n        submitCallback: this.submitCallback,\r\n        preventAutoFocus: true,\r\n        // loadExternalStyleSheet: false\r\n      },\r\n      tags: this.formFields\r\n    });\r\n    this.elem.appendChild(this.cf.el);\r\n  }\r\n\r\n  submitCallback() {\r\n    var formDataSerialized = this.cf.getFormData(true);\r\n    console.log(\"Formdata, obj:\", formDataSerialized);\r\n    this.cf.addRobotChatResponse(\"Processing your search... <span id='spin'>😎</span>\")\r\n    const q = formDataSerialized.colorInput ? formDataSerialized.colorInput : ''\r\n\r\n    if (this.props.dev){\r\n      console.log('dev');\r\n      console.log(q)\r\n      console.log(hardData);\r\n      // this.cf.addRobotChatResponse(\"Done! 🥳\");\r\n      this.props.appCallback(hardData, 'https://underarmour.scene7.com/is/image/Underarmour/V5-1216010-001_FC_Main?scl=1&fmt=jpg', q);\r\n    } else {\r\n      console.log(formDataSerialized.colorInput)\r\n      axios({\r\n        method: 'post',\r\n        url: cloudURL,\r\n        header: { 'content-type': 'application/json'},\r\n        data: {\r\n          imageUrl: formDataSerialized.imageUrl,\r\n          q: q\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.cf.addRobotChatResponse(\"Done! 🥳\")\r\n        // TODO: connect to App.js\r\n        this.props.appCallback(response, formDataSerialized.imageUrl, q)\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        console.log(error);\r\n        this.cf.addRobotChatResponse(\"Oops! Something went wrong 😭\")\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id='title-text'>\r\n          <img id='everwear-logo' src={greenlogo}/>\r\n          <p id=\"welcome-message\">We'll help you find the clothes you already want, but from <strong>ethical</strong>, <strong>sustainable</strong> sources.</p>\r\n        </div>\r\n        <div id = \"chat\" ref={ref => this.elem = ref}>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './ResultsList.css';\r\n\r\nconst dict = {\r\n  'alternativeapparel.com': 'Alternative Apparel',\r\n  'bodenusa.com': 'Boden',\r\n  'everlane.com': 'Everlane',\r\n  'fordays.com': 'For Days',\r\n  'kotn.com': 'Kotn',\r\n  'livefashionable.com': 'ABLE',\r\n  'peopletree.co.uk': 'People Tree',\r\n  'tentree.ca': 'tentree',\r\n  'wearpact.com': 'Pact'\r\n}\r\n\r\nconst Result = ({ href, src }) => (\r\n  <li className=\"results-list__item\">\r\n    <a href={href}>\r\n      <div className=\"results-list__item__image\">\r\n        <img src={src} />\r\n      </div>\r\n    </a>\r\n  </li>\r\n);\r\n\r\nconst ResultsList = ({ results, searchImg, q }) => {\r\n  console.log(results);\r\n  const qspan = q ? <span className='results-list__q'> in {q}</span> : null\r\n  return (\r\n    <div className=\"results-list\">\r\n      <h2 className=\"results-list__title\">You searched for <img className='results-list__og' src={searchImg}/> {q && `in ${q}`}</h2>\r\n      <div className=\"results-list__list\">\r\n        { results.map(result => (\r\n            <li key={result.site}>\r\n              <h3><a className='result-list__siteLink' href={'https://www.' + result.site}>{dict[result.site]}</a></h3>\r\n              <ul className=\"results-list__row\">\r\n                { result.products.map(product => <Result key={product.src} {...product} />) }\r\n              </ul>\r\n            </li>\r\n          )) }\r\n      </div>\r\n    </div>\r\n)};\r\n\r\nexport default ResultsList;\r\n","import React, { Component } from 'react'\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport './App.css';\r\nimport ConvoForm from './components/ConvoForm.js';\r\nimport ResultsList from './components/ResultsList.js';\r\n\r\nconst dev = false;\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      finishedSurvey: false,\r\n      results: null,\r\n      navbarOpen: false,\r\n      imgSrc: '',\r\n      q: ''\r\n    };\r\n\r\n    this.handleFinishedSurvey = this.handleFinishedSurvey.bind(this);\r\n    this.handleNavbar = this.handleNavbar.bind(this);\r\n    this.formSubmitCallback = this.formSubmitCallback.bind(this);\r\n  }\r\n\r\n  handleNavbar() {\r\n    this.setState({\r\n      navbarOpen: !this.state.navbarOpen\r\n    });\r\n  }\r\n\r\n  handleFinishedSurvey () {\r\n    this.setState ({\r\n      finishedSurvey : true\r\n    });\r\n  }\r\n\r\n  formSubmitCallback(response, ogURL, q){\r\n    // Uncomment line below to change thing:\r\n    this.handleFinishedSurvey();\r\n\r\n    console.log('SUBMITTED');\r\n    this.setState({\r\n      results: response.data,\r\n      imgSrc: ogURL,\r\n      q: q\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let current;\r\n    let home;\r\n\r\n    if (!this.state.finishedSurvey) {\r\n      current = <ConvoForm appCallback={this.formSubmitCallback} dev={dev}/>\r\n      home= 'home'\r\n    } else {\r\n      current = <Navbar\r\n      navbarState={this.state.navbarOpen}\r\n      handleNavbar={this.handleNavbar} />;\r\n      home = ''\r\n    }\r\n    console.log(this.state.results);\r\n    return (\r\n      <div className={'app-container ' + home} >\r\n        {current}\r\n        {this.state.results && <ResultsList results={this.state.results} searchImg={this.state.imgSrc} q={this.state.q}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}